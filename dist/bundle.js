(()=>{"use strict";var t;!function(t){t.English="English",t.Hebrew="Hebrew"}(t||(t={}));const e=t.Hebrew,r={[t.Hebrew]:[{letter:"א",count:9,points:1},{letter:"ב",count:2,points:2},{letter:"ג",count:3,points:1},{letter:"ד",count:3,points:1},{letter:"ה",count:2,points:2},{letter:"ו",count:4,points:1},{letter:"ז",count:1,points:1},{letter:"ח",count:2,points:3},{letter:"ט",count:1,points:2},{letter:"י",count:4,points:1},{letter:"כ",count:3,points:3},{letter:"ל",count:4,points:1},{letter:"מ",count:3,points:2},{letter:"נ",count:5,points:1},{letter:"ס",count:7,points:1},{letter:"ע",count:5,points:1},{letter:"פ",count:3,points:2},{letter:"צ",count:1,points:4},{letter:"ק",count:1,points:5},{letter:"ר",count:4,points:1},{letter:"ש",count:4,points:2},{letter:"ת",count:4,points:2}],[t.English]:[{letter:"A",count:9,points:1},{letter:"B",count:2,points:3},{letter:"C",count:2,points:3},{letter:"D",count:4,points:2},{letter:"E",count:12,points:1},{letter:"F",count:2,points:4},{letter:"G",count:3,points:2},{letter:"H",count:2,points:4},{letter:"I",count:9,points:1},{letter:"J",count:1,points:8},{letter:"K",count:1,points:5},{letter:"L",count:4,points:1},{letter:"M",count:2,points:3},{letter:"N",count:6,points:1},{letter:"O",count:8,points:1},{letter:"P",count:2,points:3},{letter:"Q",count:1,points:10},{letter:"R",count:6,points:1},{letter:"S",count:4,points:1},{letter:"T",count:6,points:1},{letter:"U",count:4,points:1},{letter:"V",count:2,points:4},{letter:"W",count:2,points:4},{letter:"X",count:1,points:8},{letter:"Y",count:2,points:4},{letter:"Z",count:1,points:10}]};var i;!function(t){t.Regular="Regular",t.DoubleWord="DoubleWord",t.DoubleLetter="DoubleLetter",t.TripleWord="TripleWord",t.TripleLetter="TripleLetter",t.CenterTile="CenterTile"}(i||(i={}));const n={[i.DoubleWord]:{wordMul:2,letterMul:1,coordinates:[{row:1,col:1},{row:2,col:2},{row:3,col:3},{row:4,col:4},{row:10,col:10},{row:11,col:11},{row:12,col:12},{row:13,col:13},{row:1,col:13},{row:2,col:12},{row:3,col:11},{row:4,col:10},{row:10,col:4},{row:11,col:3},{row:12,col:2},{row:13,col:1}]},[i.DoubleLetter]:{wordMul:1,letterMul:2,coordinates:[{row:0,col:3},{row:0,col:11},{row:2,col:6},{row:2,col:8},{row:3,col:0},{row:3,col:7},{row:3,col:14},{row:6,col:2},{row:6,col:6},{row:6,col:8},{row:6,col:12},{row:7,col:3},{row:7,col:11},{row:8,col:2},{row:8,col:6},{row:8,col:8},{row:8,col:12},{row:11,col:0},{row:11,col:7},{row:11,col:14},{row:12,col:6},{row:12,col:8},{row:14,col:3},{row:14,col:11}]},[i.TripleWord]:{wordMul:3,letterMul:1,coordinates:[{row:0,col:0},{row:0,col:7},{row:0,col:14},{row:7,col:0},{row:7,col:14},{row:14,col:0},{row:14,col:7},{row:14,col:14}]},[i.TripleLetter]:{wordMul:1,letterMul:3,coordinates:[{row:1,col:5},{row:1,col:9},{row:5,col:1},{row:5,col:5},{row:5,col:9},{row:5,col:13},{row:9,col:1},{row:9,col:5},{row:9,col:9},{row:9,col:13},{row:13,col:5},{row:13,col:9}]},[i.Regular]:{wordMul:1,letterMul:1,coordinates:[]},[i.CenterTile]:{wordMul:2,letterMul:1,coordinates:[{row:7,col:7}]}};var o;!function(t){t[t.EndTurn=0]="EndTurn"}(o||(o={}));const s={[t.English]:{[o.EndTurn]:"End Turn"},[t.Hebrew]:{[o.EndTurn]:"סיום תור"}};class l{constructor(t,e){this._row=t,this._col=e,this._tile=null,this._type=i.Regular,this._wordMul=1,this._letterMul=1}get row(){return this._row}get col(){return this._col}get tile(){return this._tile}set tile(t){this._tile=t}get type(){return this._type}set type(t){this._type=t}get wordMultiplier(){return this._wordMul}set wordMultiplier(t){this._wordMul=t}get letterMultiplier(){return this._letterMul}set letterMultiplier(t){this._letterMul=t}disableMultiplier(){this._wordMul=1,this._letterMul=1}}class a{constructor(t){this._size=t,this.tiles=new Array(t).fill(null).map((()=>new Array(t).fill(null)));for(let e=0;e<t;e++)for(let r=0;r<t;r++)this.tiles[e][r]=new l(e,r);Object.keys(n).forEach(((t,e)=>{let r=t,i=n[r].wordMul,o=n[r].letterMul;n[r].coordinates.forEach((t=>{this.tiles[t.row][t.col].type=r,this.tiles[t.row][t.col].wordMultiplier=i,this.tiles[t.row][t.col].letterMultiplier=o}))}))}getBoardTile(t,e){return this.tiles[t][e]}getTile(t,e){return this.tiles[t][e].tile}setTile(t,e,r){this.tiles[t][e].tile=r}isTileEmpty(t,e){return null==this.getTile(t,e)}isTileInBoard(t,e){return t>=0&&e>=0&&t<this.height&&e<this.width}get width(){return this._size}get height(){return this._size}}class c{constructor(t,e,r){this._name=t,this._id=e,this.max_tile_num=r,this._points=0,this._rack=new Set}fillRack(t){for(;this._rack.size<this.max_tile_num&&t.length>0;)this._rack.add(t.draw())}removeTile(t){this._rack.delete(t)}get rack(){return[...this._rack]}get id(){return this._id}get name(){return this._name}get points(){return this._points}set points(t){if(t<0)throw"Points must be non-negative";this._points=t}}let u=0;class d{constructor(t,e){this._letter=t,this._points=e,this._id=u++}get letter(){return this._letter}get points(){return this._points}get id(){return this._id}}class h{constructor(t){this.tiles=[];const e=r[t];for(const t of e)for(let e=t.count;e>0;e--)this.tiles.push(new d(t.letter,t.points));this.tiles=function(t){let e,r=t.length;for(;0!=r;)e=Math.floor(Math.random()*r),r--,[t[r],t[e]]=[t[e],t[r]];return t}(this.tiles)}draw(){return this.tiles.length>0?this.tiles.pop():null}get length(){return this.tiles.length}}class p{constructor(t,e){this.board=document.getElementById("board"),this.activeTiles=new Map,this.callbacks=e,this.createBoard(t)}show(){document.getElementById("game").classList.remove("hide"),document.getElementById("loader").remove()}createBoard(t){this.board.innerHTML="";for(let e=0;e<t.height;e++)for(let r=0;r<t.width;r++){const i=document.createElement("div");i.classList.add("board_tile"),i.dataset.r=e.toString(),i.dataset.c=r.toString(),i.classList.add(`tile_type_${t.getBoardTile(e,r).type}`),this.board.appendChild(i)}this.attachEvents()}attachEvents(){this.makeBoardDroppable(),this.makeElementDroppable(document.getElementById("active_player_rack")),this.configureButtons()}configureButtons(){const t=document.getElementById("end_turn_button"),r=this;var i,n,l;t.innerText=(i=e,n=o.EndTurn,(null===(l=s[i])||void 0===l?void 0:l[n])||""),t.addEventListener("click",(function(t){const e=[];document.querySelectorAll(".active_tile").forEach((t=>{const i=t.parentElement;if(null==i?void 0:i.classList.contains("board_tile")){const n=parseInt(t.id.replace("game_tile_",""));e.push({tile:r.activeTiles.get(n),r:parseInt(i.dataset.r),c:parseInt(i.dataset.c)})}})),r.callbacks.endTurn(e)}))}finalizePlacements(){document.querySelectorAll(".active_tile").forEach((t=>{t.classList.remove("active_tile"),t.classList.remove("grabbable"),t.setAttribute("draggable","false")}))}makeElementDroppable(t){t.classList.add("droppable"),t.addEventListener("dragenter",(function(t){const e=t.target;null!=e.classList&&(t.preventDefault(),e.classList.add("drag-over"))})),t.addEventListener("dragover",(function(t){const e=t.target;null!=e.classList&&(t.preventDefault(),e.classList.add("drag-over"))})),t.addEventListener("dragleave",(function(t){const e=t.target;null!=e.classList&&(t.preventDefault(),e.classList.remove("drag-over"))})),t.addEventListener("drop",(function(t){const e=t.target,r=t;if(null==e.classList)return;if(e.classList.remove("drag-over"),!e.classList.contains("droppable"))return;if(null==r.dataTransfer)return;const i=r.dataTransfer.getData("text/plain"),n=document.getElementById(i);null!=n&&(e.appendChild(n),n.classList.remove("hide"))}))}makeBoardDroppable(){document.querySelectorAll(".board_tile").forEach((t=>{this.makeElementDroppable(t)}))}createTile(t,e,r){const i=document.createElement("div"),n=document.createTextNode(t.letter);i.classList.add("game_tile"),e&&(i.classList.add("grabbable"),i.setAttribute("draggable","true"),i.addEventListener("dragstart",(function(t){const e=t.target,r=t;null!=e.classList&&(null!=r.dataTransfer&&r.dataTransfer.setData("text/plain",e.id),setTimeout((()=>{e.classList.add("hide")}),0))})),i.addEventListener("dragend",(function(t){const e=t.target;null!=e.classList&&e.classList.remove("hide")}))),r&&i.classList.add("active_tile"),i.appendChild(n),i.setAttribute("id",`game_tile_${t.id}`);const o=document.createElement("div"),s=document.createTextNode(t.points.toString());return o.classList.add("points"),o.appendChild(s),i.appendChild(o),i}displayPlayerInfo(t){const e=document.getElementById(`player${t.id}_rack`);if(null==e)throw new Error(`Can't find player rack for player ${t.id}`);e.innerHTML="",t.rack.forEach((t=>{e.appendChild(this.createTile(t,!1,!1))}));const r=document.getElementById(`player${t.id}_points`);if(null==r)throw new Error(`Can't find player points for player ${t.id}`);r.innerText=t.points.toString()}setActivePlayer(t){const e=document.getElementById(`player${t.id}_rack`),r=document.getElementById("active_player_rack");if(null==e||null==r)throw new Error("Can't find rack!");r.innerHTML="",this.activeTiles.clear(),t.rack.forEach((t=>{var e;null===(e=document.getElementById(`game_tile_${t.id}`))||void 0===e||e.remove(),r.appendChild(this.createTile(t,!0,!0)),this.activeTiles.set(t.id,t)}))}logMoveDetails(t,e,r){}}const w=4294967295;function f(t){return t>>10<<((512&t)>>6)&w}class _{constructor(){this._units=null,this.ROOT=0}has_value(t){return null!=this._units&&function(t,e=256){return!!(t&e)}(this._units[t])}value(t){if(null==this._units)throw"Error: _units is null!";const e=(t^f(this._units[t]))&w;return function(t,e=2147483647&w){return t&e}(this._units[e])}read(t){let e=new DataView(t).getUint32(0,!0);this._units=new Uint32Array(t,4,e)}contains(t){const e=this.follow_bytes(t,this.ROOT);return null!==e&&this.has_value(e)}find(t){const e=this.follow_bytes(t,this.ROOT);return null===e?-1:this.has_value(e)?this.value(e):-1}follow_char(t,e){if(null==this._units)throw"Error: _units is null!";const r=(e^f(this._units[e])^t)&w;return function(t,e=-2147483393){return t&e}(this._units[r])!=t?null:r}follow_bytes(t,e){let r=e;for(let e of t)if(r=this.follow_char(e,r),null===r)return null;return r}}class g{constructor(){this._units=null,this.ROOT=0}child(t){if(null==this._units)throw"Can't use Guide before reading into it.";return this._units[2*t]}sibling(t){if(null==this._units)throw"Can't use Guide before reading into it.";return this._units[2*t+1]}read(t){let e=new DataView(t),r=4+4*e.getUint32(0,!0),i=e.getUint32(r,!0);this._units=new Uint8Array(t,r+4,2*i)}size(){if(null==this._units)throw"Can't use Guide before reading into it.";return this._units.length}}class y{constructor(t,e){this._dic=t,this._guide=e,this._last_index=-1,this._index_stack=[],this.key=[]}value(){return this._dic.value(this._last_index)}start(t,e){this.key=[...e],this._guide.size()?(this._index_stack=[t],this._last_index=this._dic.ROOT):this._index_stack=[]}next(){if(0===this._index_stack.length)return!1;let t=this._index_stack[this._index_stack.length-1];if(this._last_index!=this._dic.ROOT){const e=this._guide.child(t);if(e){if(t=this._follow(e,t),null===t)return!1}else for(;;){let e=this._guide.sibling(t);if(this.key.length>0&&this.key.pop(),this._index_stack.pop(),0===this._index_stack.length)return!1;if(t=this._index_stack[this._index_stack.length-1],e){if(t=this._follow(e,t),null===t)return!1;break}}}return this._find_terminal(t)}_follow(t,e){const r=this._dic.follow_char(t,e);return null===r?null:(this.key.push(t),this._index_stack.push(r),r)}_find_terminal(t){for(;!this._dic.has_value(t);){let e=this._guide.child(t),r=this._dic.follow_char(e,t);if(null===t)return!1;t=r,this.key.push(e),this._index_stack.push(t)}return this._last_index=t,!0}}class m{constructor(){this.dct=null,this.guide=null}keys(t=""){const e=new TextEncoder,r=new TextDecoder("utf-8"),i=e.encode(t),n=[];if(null==this.dct||null==this.guide)throw"Dictionary must be loaded first!";const o=this.dct.follow_bytes(i,this.dct.ROOT);if(null===o)return n;const s=new y(this.dct,this.guide);for(s.start(o,i);s.next();){let t=r.decode(new Uint8Array(s.key));n.push(t)}return n}contains(t){const e=(new TextEncoder).encode(t);if(null==this.dct||null==this.guide)throw"Dictionary must be loaded first!";return this.dct.contains(e)}load(t){return this.dct=new _,this.guide=new g,this.dct.read(t),this.guide.read(t),this}}class v{constructor(t){this.language=t,this.dawg=null,this.translateMapping={"":""}}init(){return t=this,e=void 0,i=function*(){let t=yield fetch("wordlists/config.json");const e=yield t.json();if(this.translateMapping=e.translate_mapping,t=yield fetch("wordlists/hspell/e.dawg"),!t.ok)throw 404==t.status&&console.log("Can't find database"),new Error(`An error has occurred while loading the dictionary: ${t.status}`);let r=yield t.arrayBuffer();this.dawg=new m;let i=performance.now();this.dawg.load(r);let n=performance.now();console.log(`Loaded DAWG database in ${n-i} milliseconds`)},new((r=void 0)||(r=Promise))((function(n,o){function s(t){try{a(i.next(t))}catch(t){o(t)}}function l(t){try{a(i.throw(t))}catch(t){o(t)}}function a(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,l)}a((i=i.apply(t,e||[])).next())}));var t,e,r,i}heb2eng(t){return t.replace(/(\?|[\u0590-\u05fe])/g,(t=>this.translateMapping[t]))}contains(t){if(null==this.dawg)throw new Error("Dictionary must be loaded before using it");return this.dawg.contains(this.heb2eng(t)+"\r")}}const b=new class{constructor(t){const r=this;this.board=new a(15),this.players=t.map(((t,e)=>new c(t,e+1,7))),this.currentPlayerIndex=0,this.bag=new h(e),this.firstTurnPlayed=!1,this.dictionary=new v(e),this.display=new p(this.board,{endTurn:function(t){r.endTurnCallback(t)}}),this.players.forEach((t=>{t.fillRack(this.bag),this.display.displayPlayerInfo(t)}))}init(){return t=this,e=void 0,i=function*(){yield this.dictionary.init(),this.display.setActivePlayer(this.currentPlayer)},new((r=void 0)||(r=Promise))((function(n,o){function s(t){try{a(i.next(t))}catch(t){o(t)}}function l(t){try{a(i.throw(t))}catch(t){o(t)}}function a(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,l)}a((i=i.apply(t,e||[])).next())}));var t,e,r,i}start(){this.display.show()}getCreatedWords(t){const e=new Set,r=["r","c"];for(const i of t)for(let t of r){let r="",n=0,o={r:-1,c:-1},s={r:i.r,c:i.c};for(;this.board.isTileInBoard(s.r,s.c)&&!this.board.isTileEmpty(s.r,s.c);)o={r:s.r,c:s.c},s[t]--;s.r=o.r,s.c=o.c;let l=1;for(;this.board.isTileInBoard(s.r,s.c)&&!this.board.isTileEmpty(s.r,s.c);){let e=this.board.getTile(s.r,s.c),i=this.board.getBoardTile(s.r,s.c);r+=e.letter,n+=e.points*i.letterMultiplier,s[t]++,l*=i.wordMultiplier}n*=l,r.length>1&&e.add(JSON.stringify({word:r,start_index:o,points:n}))}return Array.from(e,(t=>JSON.parse(t)))}calculatePoints(t,e){let r=0;for(const t of e)console.log(t.word,t.points),r+=t.points;return 7==t.length&&(r+=50),r}verifyPlacementConsecutive(t){if(t.length>0){const e=t.map((t=>t.r)),r=t.map((t=>t.c));if(1!==new Set(e).size&&1!==new Set(r).size)return!1}return!0}verifyPlacementConnected(t){if(this.firstTurnPlayed&&t.length>0){let e=!1;for(const r of t)for(const[t,i]of[[1,0],[-1,0],[0,1],[0,-1]]){let n=r.r+t,o=r.c+i;if(this.board.isTileInBoard(n,o)&&!this.board.isTileEmpty(n,o)){e=!0;break}}if(!e)return!1}return!0}endTurnCallback(t){const e=[];try{if(!this.verifyPlacementConsecutive(t))throw"The tiles are not placed consecutively horizontally or vertically";if(!this.verifyPlacementConnected(t))throw"One or more tiles are not connected to an existing tile";for(const r of t){if(!this.board.isTileEmpty(r.r,r.c))throw"One or more tiles are placed on an existing tile.";this.board.setTile(r.r,r.c,r.tile),e.push(r)}const r=this.getCreatedWords(t);for(const t of r)if(!this.dictionary.contains(t.word))throw`Illegal word: ${t.word}`;if(!this.firstTurnPlayed){if(1==t.length)throw"The first word must be at least 2 letters long!";if(t.length>0){let e=!1;if(t.forEach((t=>{7==t.r&&7==t.c&&(e=!0)})),!e)throw"The first word must be placed on the center tile!";this.firstTurnPlayed=!0}}let i=this.calculatePoints(t,r);this.currentPlayer.points+=i,t.forEach((t=>{this.currentPlayer.removeTile(t.tile),this.board.getBoardTile(t.r,t.c).disableMultiplier()})),this.display.finalizePlacements(),this.display.logMoveDetails(this.currentPlayer,i,r),this.currentPlayer.fillRack(this.bag),this.display.displayPlayerInfo(this.currentPlayer),this.currentPlayerIndex=(this.currentPlayerIndex+1)%this.players.length,this.display.setActivePlayer(this.currentPlayer)}catch(t){console.log(t),e.forEach((t=>{this.board.setTile(t.r,t.c,null)}))}}get currentPlayer(){return this.players[this.currentPlayerIndex]}getBoard(){return this.board}}(["שחקן/ית א'","שחקן/ית ב'"]);b.init(),b.start()})();